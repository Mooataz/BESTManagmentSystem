"use strict";
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const sqlite_1 = require("sqlite");
const sqlite3_1 = __importDefault(require("sqlite3"));
const db_1 = require("../db");
const migrate_1 = require("./migrate");
sqlite3_1.default.verbose(); // enable verbose mode
class SQLiteDatabase extends db_1.SQLDatabase {
    dbPromise;
    migrated = false;
    constructor(config) {
        super();
        this.dbPromise = (0, sqlite_1.open)({ filename: config.uri, driver: sqlite3_1.default.Database });
    }
    async query(text, params) {
        if (!this.migrated) {
            throw new Error('Database migrations have not been ensured.');
        }
        const database = await this.dbPromise;
        const query = this.transformQuery(text);
        return {
            rows: await database.all(query, ...params),
        };
    }
    transformQuery(original) {
        return original.replace(/(\$[\d]+)/g, '?');
    }
    async performMigrations() {
        const database = await this.dbPromise;
        await (0, migrate_1.migrate)(database);
        this.migrated = true;
    }
}
exports.default = SQLiteDatabase;
//# sourceMappingURL=db.js.map