"use strict";
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SQLAdapter = void 0;
const types_1 = require("../types");
const transformer_1 = __importDefault(require("./transformer"));
class SQLAdapter extends types_1.ApiDBAdapter {
    db;
    constructor(config, db) {
        super(config);
        this.db = db;
    }
    async fetchProjects() {
        const results = await this.db.fetchProjects();
        return transformer_1.default.projects(results);
    }
    async fetchSnapshots(projectId, since) {
        const results = await this.db.fetchSnapshots(projectId, since);
        return transformer_1.default.snapshots(results);
    }
    async saveSnapshots(snapshots, projectName) {
        let projectResult = await this.db.fetchProject(projectName);
        if (projectResult.rows.length < 1) {
            await this.db.createProject(projectName, true);
            projectResult = await this.db.fetchProject(projectName);
        }
        const projectId = projectResult.rows[0].id;
        await Promise.all(snapshots.map(async (snapshot) => {
            return this.db.createOrUpdateSnapshot(snapshot, projectId);
        }));
        return true;
    }
    async updateLastRelease(projectName, release) {
        const projectResult = await this.db.fetchProject(projectName);
        if (projectResult.rows.length > 0) {
            const projectId = projectResult.rows[0].id;
            await this.db.updateProjectLastRelease(projectId, release);
        }
        else {
            throw new Error(`Project with name: '${projectName}' does not exist.`);
        }
        return true;
    }
    migrate() {
        return this.db.performMigrations();
    }
}
exports.SQLAdapter = SQLAdapter;
//# sourceMappingURL=adapter.js.map