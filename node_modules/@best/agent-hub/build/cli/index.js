"use strict";
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hub = void 0;
exports.run = run;
const express_1 = __importDefault(require("express"));
const hub_1 = require("../hub");
Object.defineProperty(exports, "Hub", { enumerable: true, get: function () { return hub_1.Hub; } });
const agent_frontend_1 = require("@best/agent-frontend");
const config_1 = require("./config");
const http_1 = __importDefault(require("http"));
const PORT = process.env.PORT || 5000;
function run() {
    const hubConfig = (0, config_1.getHubConfig)();
    const app = (0, express_1.default)();
    const server = http_1.default.createServer(app);
    const hub = new hub_1.Hub(server, hubConfig);
    app.get('/api/agents/:agentId', (req, res) => {
        const { agentId } = req.params;
        res.json(hub.getAgent(agentId));
    });
    app.get('/api/agents', (req, res) => {
        res.json(hub.getAgents());
    });
    (0, agent_frontend_1.serveFrontend)(app);
    (0, agent_frontend_1.observeAgent)(server, hub);
    server.listen(PORT);
    process.stdout.write(`Best Hub listening in port ${PORT}...\n`);
}
//# sourceMappingURL=index.js.map